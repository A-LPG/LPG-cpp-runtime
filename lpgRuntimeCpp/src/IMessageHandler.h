#pragma once
#include <string>
#include <vector>


/**
 * Low-Level interface to act as recipient for error messages generated by a
 * parser/compiler.
 */

struct IMessageHandler {
	virtual ~IMessageHandler() = default;
	/**
     * The following constants can be used as indexes to dereference
     * values in the msgLocation and errorLocation arrays.
     *
     * Locations are constructed by the method getLocation in LexStream which
     * takes two arguments: a start and an end location and returns an array
     * of 6 integers.
     */
   static  constexpr   int OFFSET_INDEX = 0,
        LENGTH_INDEX = 1,
        START_LINE_INDEX = 2,
        START_COLUMN_INDEX = 3,
        END_LINE_INDEX = 4,
        END_COLUMN_INDEX = 5;

    /**
     *
     * When a location is undefined, the value of its offset is 0.
     *
     * @param errorCode
     * @param msgLocation
     * @param errorLocation
     * @param filename
     * @param errorInfo
     */
   virtual   void handleMessage(int errorCode, std::vector<int> msgLocation, std::vector<int> errorLocation, 
        const  std::wstring& filename,const std::vector<std::wstring>& errorInfo) = 0;
};